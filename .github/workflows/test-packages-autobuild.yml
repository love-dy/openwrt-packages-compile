#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Packages-AutoBuild Test

on: 
  repository_dispatch:
  # push: 
  #   branches:
  #     - master
  # schedule:
  #   - cron: 0 1 */1 * *
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPO_TOKEN: ${{ secrets.ACCESS_TOKEN }} 
  
  PPPOE_USERNAME: ${{ secrets.PPPOE_USERNAME }}
  PPPOE_PASSWD: ${{ secrets.PPPOE_PASSWD }}
  SCKEY: ${{ secrets.SCKEY }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TZ: Asia/Shanghai

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id || github.event.sender.id == '119362912'
    runs-on: Ubuntu-22.04
    
    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        #target: ["${{ github.event.client_payload.target }}"]
        target: [x86_64, aarch64_generic] 
        
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Load Settings.ini
      run: |
        source "${GITHUB_WORKSPACE}/devices/common/settings.ini"
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
        echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
        echo "DIY_SH=${DIY_SH}" >> $GITHUB_ENV
        echo "FREE_UP_DISK=${FREE_UP_DISK}" >> $GITHUB_ENV
        echo "SSH_ACTIONS=${SSH_ACTIONS}" >> $GITHUB_ENV
        echo "UPLOAD_BIN_DIR_FOR_ARTIFACT=${UPLOAD_BIN_DIR_FOR_ARTIFACT}" >> $GITHUB_ENV
        echo "UPLOAD_FIRMWARE_FOR_ARTIFACT=${UPLOAD_FIRMWARE_FOR_ARTIFACT}" >> $GITHUB_ENV
        if [[ "${{matrix.target}}" == arm_* ]]; then
          echo "REPO_TOKEN=${{ secrets.ACCESS_TOKEN }}" >> $GITHUB_ENV
        else
          echo "REPO_TOKEN=${{ secrets.ACCESS_TOKEN }}" >> $GITHUB_ENV
        fi
        sed -i "1a REPO_TOKEN=${{ env.REPO_TOKEN }}" ${GITHUB_WORKSPACE}/devices/common/custom.sh

    - name: Trigger Packages Update
      run: |
        gitdate="$(curl -H "Authorization: token ${{ env.REPO_TOKEN }}" -s "https://api.github.com/repos/love-dy/openwrt-packages/actions/runs" | jq -r '.workflow_runs[0].created_at')" || true
        gitdate="$(date -d "$gitdate" +%s)" || true
        now="$(date -d "$(date)" +%s)"
        #if [[ $(expr $gitdate + 120) < $now ]]; then
        curl -X POST https://api.github.com/repos/love-dy/openwrt-packages/dispatches \
        -H "Accept: application/vnd.github.everest-preview+json" \
        -H "Authorization: token ${{ env.REPO_TOKEN }}" \
        --data '{"event_type": "update"}'
        #fi

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        ( sudo -E apt-get -qq install build-essential clang flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev swig libpython3-dev aria2 jq rename bc libfuse-dev libelf-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean ) &
        sudo timedatectl set-timezone "$TZ"

    - name: Get current date
      id: date
      run: |
        echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
        echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV

    - name: Clone source code
      run: |
        #REPO_BRANCH="$(curl -s https://api.github.com/repos/openwrt/openwrt/tags | jq -r '.[].name' | grep v22 | head -n 1 | sed -e 's/v//')" || true
        REPO_BRANCH="23.05-SNAPSHOT"
        if [[ ${{matrix.target}} == "x86_64" ]]; then
            curl -fL -m 150 -o sdk.tar.xz https://downloads.openwrt.org/releases/$REPO_BRANCH/targets/x86/64/openwrt-sdk-$REPO_BRANCH-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz || curl -fL -m 150 -o sdk.tar.xz https://downloads.cdn.openwrt.org/releases/$REPO_BRANCH/targets/x86/64/openwrt-sdk-$REPO_BRANCH-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
        elif [[ ${{matrix.target}} == "aarch64_generic" ]]; then
            curl -fL -m 150 -o sdk.tar.xz https://downloads.openwrt.org/releases/$REPO_BRANCH/targets/rockchip/armv8/openwrt-sdk-$REPO_BRANCH-rockchip-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz || curl -fL -m 150 -o sdk.tar.xz https://downloads.cdn.openwrt.org/releases/$REPO_BRANCH/targets/rockchip/armv8/openwrt-sdk-$REPO_BRANCH-rockchip-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz
        fi

    - name: Free up disk space
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p -m 777 openwrt /mnt/openwrt/dl /mnt/openwrt/build_dir/hostpkg openwrt/build_dir /mnt/openwrt/bin
        ln -sf /mnt/openwrt/dl openwrt/dl
        ln -sf /mnt/openwrt/build_dir/hostpkg openwrt/build_dir/hostpkg
        ln -sf /mnt/openwrt/bin openwrt/bin
    
    - name: Load custom configuration
      run: |
        mkdir openwrt
        tar -xJf sdk.tar.xz -C openwrt
        rm -Rf sdk.tar.xz
        cd openwrt
        cp -rf ./openwrt-sdk*/. ./ || true
        cp -rf ../devices ./
        cp -rf devices/common/. ./
        cp -rf devices/${{matrix.target}}/. ./
        chmod -R +x devices/* || true
        sed -i '/	refresh_config();/d' scripts/feeds
        ./scripts/feeds update -a
        find "devices/common/patches" -type f -name '*.b.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"
        /bin/bash "devices/common/custom.sh"
        if [ -f "devices/${{matrix.target}}/custom.sh" ]; then
          /bin/bash "devices/${{matrix.target}}/custom.sh"
        fi
        find "devices/common/patches" -type f -name '*.patch' ! -name '*.b.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"
        if [ -n "$(ls -A "devices/${{matrix.target}}/patches" 2>/dev/null)" ]; then
          find "devices/${{matrix.target}}/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"
        fi
        cp -Rf ./diy/* ./ || true
        if [ -f "devices/${{matrix.target}}/default-settings" ]; then
          echo >> package/*/*/my-default-settings/files/etc/uci-defaults/99-default-settings
          cat devices/${{matrix.target}}/default-settings >> package/*/*/my-default-settings/files/etc/uci-defaults/99-default-settings
        fi
        if [ -f "devices/${{matrix.target}}/.config" ]; then
          echo >> .config
          cat devices/${{matrix.target}}/.config >> .config
        fi
        #if [[ ${{github.actor}} == "love-dy" ]]; then
          #sed -i "s/index()/index()\nif luci.sys.exec(\"cat \/etc\/openwrt_release | grep -o -E ^DISTRIB_DESCRIPTION='.*(GaryPang|Kiddin)'\") == \"\" then return end/g" package/feeds/love-dy/luci-app*/luasrc/controller/*.lua
        #fi

    - name: SSH connection to Actions
      uses: kiddin9/debugger-action@master
      if: contains(github.event.action, 'ssh')

    - name: Prepare
      run: |
        status=$(curl -H "Authorization: token ${{ env.REPO_TOKEN }}" -s "https://api.github.com/repos/love-dy/openwrt-packages/actions/runs" | jq -r '.workflow_runs[0].status')
        while [ "$status" == "in_progress" ];do
          sleep 5
          status=$(curl -H "Authorization: token ${{ env.REPO_TOKEN }}" -s "https://api.github.com/repos/love-dy/openwrt-packages/actions/runs" | jq -r '.workflow_runs[0].status')
        done
        cd openwrt
        make defconfig
        mv -f package/feeds/lovedy lovedy.b
        mv -f feeds/packages/lang feeds/packages/lang.b
        mv -f feeds/packages feeds/packages.b
        mkdir package/feeds/love-dy
        cp -rf lovedy.b/{wxbase,lib*,rapidjson,jpcre2,toml11,gn,curl,quickjspp,qt*,libtorrent*,openssl,mbedtls,ppp,cups,nftables} package/feeds/love-dy/ || true

    - name: Compile the firmware
      run: |
        cd openwrt
          echo -e "$(($(nproc)+1)) thread compile"
          fpkg="$(echo "${{github.event.action}}" | sed -e 's/\(aarch64_generic\|x86_64\| [0-9][0-9.]*\| ssh\| noser\| cw\)//g' | sed -e 's/ //g')"
          during="$(echo "${{github.event.action}}" | grep -o -E ' [0-9][0-9.]*' | sed -e 's/ //')"
          function comp(){
             echo "compile $ipk"
             cp -rf lovedy.b/$ipk package/feeds/love-dy/
             if [[ $ipk != luci-* ]]; then
              mv -f feeds/packages.b feeds/packages
              mv feeds/packages/lang.b feeds/packages/lang
              [ "$(grep "PKG_BUILD_DEPENDS" package/feeds/love-dy/$ipk/Makefile)" ] || mv feeds/packages/lang/node feeds/packages/lang/node.b
             fi
             (make package/$ipk/compile -j$(($(nproc)+1)) || make package/$ipk/compile V=s 2>&1 | tee error_$ipk.log | grep -i "Error 2" || rm -rf error_$ipk.log) || true
             if [[ $ipk != luci-* ]]; then
              mv -f feeds/packages/lang feeds/packages/lang.b 2>/dev/null || true
              mv -f feeds/packages/lang.b/node.b feeds/packages/lang.b/node 2>/dev/null || true
              mv -f feeds/packages feeds/packages.b
              rm -rf package/feeds/love-dy/$ipk
             fi
            }
          for ipk in $(ls lovedy.b | grep -E "$fpkg"); do
            echo $ipk
            if [[ "$fpkg" && ! "$during" ]]; then
              comp
            else
              gitdate="$(curl -H "Authorization: token ${{ env.REPO_TOKEN }}" -s "https://api.github.com/repos/love-dy/openwrt-packages/commits?path=$ipk&per_page=1" | jq -r '.[0].commit.committer.date')" || true
              if [[ "$gitdate" && "$gitdate" != null ]]; then
                gitdate="$(date -d "$gitdate" +%s)"
                now="$(date -d "$(date)" +%s)"
                [ "$during" ] || during="1.05"
                durings=`echo "$during*60*60*24" | bc`
                if [[ $(($gitdate + ${durings%.*})) -gt $now && $ipk != luci-base && $ipk != luci-mod-* ]]; then
                  echo "$((($now - $gitdate)/60/60))" || true
                  echo "$ipk" >> ipk.txt
                fi
              fi
            fi
          done
          if [ -f ipk.txt ]; then
              for ipk in $(cat ipk.txt)
              do
                comp
              done
          fi
        echo "status=success" >> $GITHUB_ENV

    - name: Check space usage
      run: df -hT

    - name: Organize files
      id: organize
      run: |
        mkdir packages
        mv -f openwrt/bin/packages/*/love-dy/* packages || true
        mv -f openwrt/.config packages/${{matrix.target}}.config || true
        echo "FIRMWARE=$PWD/packages" >> $GITHUB_ENV
        echo "NAME=${{ env.date2 }} ${{matrix.target}}" >> $GITHUB_ENV

    - name: Upload packages for release
      uses: softprops/action-gh-release@master
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        files: |
            packages/*
        name: ${{ env.NAME }}
        tag_name: ${{ env.date }}_${{matrix.target}}
        body: |
          请选择你需要的升级包！
          opkg install *.ipk --force-reinstall

    - name: Upload packages for artifact
      uses: actions/upload-artifact@main
      continue-on-error: true
      if: env.UPLOAD_FIRMWARE_FOR_ARTIFACT == 'true'
      with:
        name: ${{ env.date3 }} ${{matrix.target}}
        path: packages

